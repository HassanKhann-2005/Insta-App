avatar onClick={() => navigate('/profile')}

src={`http://localhost:5000${selectedStory.user.profilePicture}`}
src={`http://localhost:5000${viewer.profilePicture}`}

 src={notif.sender.profilePicture}
 src={`http://localhost:5000${notif.sender.profilePicture}`}

 {/* Profile Header */}
                <div className="flex flex-col sm:flex-row items-center sm:items-start gap-8">
                    <img
                        src={
                            users.profilePicture
                                ? `http://localhost:5000${users.profilePicture}`
                                : "https://via.placeholder.com/150"
                        }
                        alt="profile"
                        className="w-32 h-32 rounded-full object-cover border"
                    />
                    <div className="flex-1 flex flex-col items-start">
                        {/* Username & Follow */}
                        <div className="flex items-center gap-4">
                            <h2 className="text-2xl font-bold">{users.username}</h2>
                            {currentUser?.id !== id && (
                                <button
                                    className={`px-4 py-1 text-sm font-semibold border rounded-md ${isFollowing
                                        ? "bg-gray-800 text-white"
                                        : "hover:bg-gray-800"
                                        }`}
                                    onClick={handleFollow}
                                >
                                    {isFollowing ? "Following" : "Follow"}
                                </button>
                            )}
                        </div>

                        {/* Counts */}
                        <div className="flex gap-6 mt-2 text-sm sm:text-base">
                            <p>
                                <span className="font-semibold">{users.posts?.length}</span> posts
                            </p>
                            <p
                                className="cursor-pointer hover:underline"
                                onClick={() => setShowFollowers(true)}
                            >
                                <span className="font-semibold">{users.followers?.length}</span>{" "}
                                followers
                            </p>
                            <p
                                className="cursor-pointer hover:underline"
                                onClick={() => setShowFollowing(true)}
                            >
                                <span className="font-semibold">{users.following?.length}</span>{" "}
                                following
                            </p>
                        </div>

                        {/* Bio */}
                        <p className="mt-2 text-gray-400 italic">
                            {users.bio || "No bio available"}
                        </p>
                    </div>
                </div>

                {/* Divider */}
                <div className="border-t border-gray-700 mt-8 mb-6"></div>

                {/* âœ… Stories Section */}
                <h3 className="text-lg font-semibold mb-4">Stories</h3>
                {storiesLoading ? (
                    <p className="text-gray-400">Loading stories...</p>
                ) : stories?.length > 0 ? (
                    <div className="flex gap-4 mb-8 overflow-x-auto">
                        {stories.map((story) => (
                            <div
                                key={story._id}
                                className="flex flex-col items-center cursor-pointer"
                            >
                                <img
                                    src={
                                        story.user?.profilePicture
                                            ? `http://localhost:5000${story.user.profilePicture}`
                                            : "https://via.placeholder.com/80"
                                    }
                                    alt="story"
                                    className="w-16 h-16 rounded-full object-cover border-2 border-pink-500"
                                    onClick={() => {
                                        if (stories && stories.length > 0) {
                                            setSelectedStory(stories[0]); // show first story
                                            setShowStoryModal(true);
                                        }
                                    }}
                                />
                                <span className="text-xs mt-2">{story.user?.username}</span>
                            </div>
                        ))}
                    </div>
                ) : (
                    <p className="text-gray-500">No stories yet</p>
                )}